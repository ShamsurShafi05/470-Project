{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\This PC\\\\Desktop\\\\Club Management Website 470\\\\frontend\\\\src\\\\components\\\\EventPostQuery.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EventPostQuery = ({\n  event\n}) => {\n  _s();\n  const [query, setQuery] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('/api/events/add-comment', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          eventId: event._id,\n          comments: query\n        })\n      });\n      if (!response.ok) {\n        throw new Error('Failed to submit query');\n      }\n\n      // Reset the query state \n      setQuery('');\n    } catch (error) {\n      console.error('Error submitting query:', error);\n    }\n  };\n  const handleQueryChange = event => {\n    setQuery(event.target.value);\n  };\n\n  // Check if event data is available before rendering\n  if (!event) {\n    return null; // Don't render anything if event data is empty\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"PostQueriesAll\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PostQueries1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Don't see the answers you are looking for? Post your question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Queries might be answered by the host, speakers, or the Socials Team\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"Query\",\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          className: \"text-box\",\n          rows: \"4\",\n          cols: \"50\",\n          placeholder: \"Enter your question here\",\n          value: query,\n          onChange: handleQueryChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"SubmitComment\",\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 69\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"PostQueries2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Info\",\n        children: event.comments && event.comments.map((info, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"EachInfo\",\n          children: [info, /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"CommentButtons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"Upvote\",\n              children: \"Upvote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"Report\",\n              children: \"Report\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"Reply\",\n              children: \"Reply\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 29\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(EventPostQuery, \"qO/HZodsWTfJhuzZtdaxiosei2U=\");\n_c = EventPostQuery;\nexport default EventPostQuery;\nvar _c;\n$RefreshReg$(_c, \"EventPostQuery\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","EventPostQuery","event","_s","query","setQuery","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","eventId","_id","comments","ok","Error","error","console","handleQueryChange","target","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","rows","cols","placeholder","onChange","required","type","map","info","index","_c","$RefreshReg$"],"sources":["C:/Users/This PC/Desktop/Club Management Website 470/frontend/src/components/EventPostQuery.jsx"],"sourcesContent":["import { useState } from 'react';\r\n\r\nconst EventPostQuery = ({ event }) => {\r\n    const [query, setQuery] = useState('');\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        \r\n        try {\r\n            const response = await fetch('/api/events/add-comment', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    eventId: event._id,\r\n                    comments: query,\r\n                }),\r\n            });\r\n\r\n            if (!response.ok) {\r\n                throw new Error('Failed to submit query');\r\n            }\r\n\r\n            // Reset the query state \r\n            setQuery('');\r\n        } catch (error) {\r\n            console.error('Error submitting query:', error);\r\n        }\r\n    };\r\n\r\n    const handleQueryChange = (event) => {\r\n        setQuery(event.target.value);\r\n    };\r\n\r\n    // Check if event data is available before rendering\r\n    if (!event) {\r\n        return null; // Don't render anything if event data is empty\r\n    }\r\n\r\n    return (\r\n        <div className=\"PostQueriesAll\">\r\n            <div className=\"PostQueries1\">\r\n                <h2>Don't see the answers you are looking for? Post your question</h2>\r\n                <p>Queries might be answered by the host, speakers, or the Socials Team</p>\r\n                <form className=\"Query\" onSubmit={handleSubmit}>\r\n                    <textarea\r\n                        className=\"text-box\"\r\n                        rows=\"4\"\r\n                        cols=\"50\"\r\n                        placeholder=\"Enter your question here\"\r\n                        value={query}\r\n                        onChange={handleQueryChange}\r\n                        required\r\n                    />\r\n                    <button type=\"submit\" className=\"SubmitComment\"><strong>Submit</strong></button>\r\n                </form>\r\n            </div>\r\n            <div className=\"PostQueries2\">\r\n                <h2>Comments</h2>\r\n                <div className=\"Info\">\r\n                    {event.comments && event.comments.map((info, index) => (\r\n                        <div className=\"EachInfo\" key={index}>\r\n                            {info}\r\n                            <div className=\"CommentButtons\">\r\n                                <button className=\"Upvote\">Upvote</button>\r\n                                <button className=\"Report\">Report</button>\r\n                                <button className=\"Reply\">Reply</button>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EventPostQuery;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}